apply plugin: 'maven-publish'
apply plugin: 'signing'

/*
ext {
    pomVersion = lib_version
    pomGroupId = '*'
    // pomArtifactId, pomArtifactName, pomArtifactDescription

    pomSiteUrl = '*'
    pomGitUrl = '*.git'

    pomLicenses = {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    pomDevelopers = {
        developer {
            id '*'
            name '*'
            email '*'
            // organization, organizationUrl
        }
    }
}
apply from: 'publishing.gradle'
$ gradle uploadArchives
*/

def props = { key, defaultValue = "" ->
    return providers.gradleProperty(key)
            .orElse(providers.environmentVariable(key))
            .orNull ?: defaultValue
}

gradle.taskGraph.whenReady { taskGraph ->
    ext["signing.keyId"] = props("signing.keyId")
    ext["signing.password"] = props("signing.password")
    ext["signing.secretKeyRingFile"] = props("signing.secretKeyRingFile")
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = pomGroupId
            artifactId = pomArtifactId
            version = pomVersion
            afterEvaluate { from components.release }

            pom {
                name = pomArtifactName
                description = pomArtifactDescription
                url = pomSiteUrl

                licenses(pomLicenses)
                developers(pomDevelopers)

                scm {
                    connection = pomGitUrl
                    developerConnection = pomGitUrl
                    url = pomSiteUrl
                }
            }
            def repositoryUrl = props("nexus.repository")

            println "Project: $project.path"
            println "Repo URL: $repositoryUrl"

            if (repositoryUrl != "") repositories {
                maven {
                    name = "maven"
                    url = uri(repositoryUrl)
                    credentials {
                        username props("nexus.username")
                        password props("nexus.password")
                        println "Username: $username"
                    }
                }
            }
        }
    }
}

signing {
    required { !props("nexus.repository").isEmpty() }
    sign publishing.publications.maven
}
